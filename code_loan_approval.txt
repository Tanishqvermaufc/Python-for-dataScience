# Importing header files
import numpy as np
import pandas as pd
from scipy.stats import mode 
 
import warnings
warnings.filterwarnings('ignore')


#Reading file
bank_data = pd.read_csv(path)

#Code starts here
bank=pd.DataFrame(bank_data)
categorical_var = bank.select_dtypes(include ='object')
print(categorical_var.shape)
#print(categorical_var)

numerical_var=bank.select_dtypes(include ='number')
print(numerical_var.shape)
#print(numerical_var)

banks=bank.drop(['Loan_ID'],1)
print(banks.shape)
print(banks.isnull().sum())

bank_mode= banks.mode()
banks= banks.fillna(bank_mode.iloc[0])
print(banks.isnull().sum())
print(banks.isnull().sum().values.sum())

avg_loan_amount=pd.pivot_table(banks,index=['Gender', 'Married', 'Self_Employed'],values='LoanAmount',aggfunc='mean')
print(round(avg_loan_amount['LoanAmount'][1],2))


loan_approved_se=len(banks[(banks['Self_Employed'] == 'Yes') & (banks['Loan_Status'] == 'Y')])
print(loan_approved_se)

loan_approved_nse=len(banks[(banks['Self_Employed'] == 'No') & (banks['Loan_Status'] == 'Y')])
print(loan_approved_nse)

percentage_se = (loan_approved_se/614)*100
print(round(percentage_se,2))
percentage_nse = (loan_approved_nse/614)*100
print(round(percentage_nse,2))


loan_term=banks['Loan_Amount_Term'].apply( lambda x: x/12)
big_loan_term=len(banks[loan_term>=25])
print(big_loan_term)


loan_groupby = banks.groupby(['Loan_Status'])
loan_groupby = loan_groupby['ApplicantIncome','Credit_History']
mean_values = loan_groupby.mean()

print(mean_values)


